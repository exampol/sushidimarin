@using BlazorApp.Data
<ModalEditOrder @ref="EditOrder" OnOrderEdited="OnOrderEdited"></ModalEditOrder>
<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Dettagli</h5>
                <button type="button" class="close" style="border:0" data-dismiss="modal" aria-label="Close" @onclick="() => Close()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table style="text-align:center; border: 1px solid black; width:100%;height:100%">
                    <tr><td>Utente</td><td>Quantità</td><td style="width:26px;"></td></tr>
                    @for (int i = 0; i < details.Count; i++) {
                        string owner = details.ElementAt(i).Key;
                        int qty = details[owner];
                        if (owner == name) {
                            <tr><td>@owner</td><td>@qty</td><td style="width:26px; position: relative;"><img @onclick="()=>EditOrder.Open(item)" src="icons8-edit.svg" style="left:0; width:100%; height:100%; margin: 0; position: absolute; top: 50%; transform: translateY(-50%);" /></td></tr>
                        } else {
                            <tr><td>@owner</td><td>@qty</td><td style="width:26px; position: relative;"></td></tr>
                        }
                    }
                </table>
            </div>
        </div>
    </div>
</div>


@if (ShowBackdrop) {
    <div class="modal-backdrop fade show"></div>
}


@code {
    [Parameter]
    public EventCallback<Tuple<string, int, int>> OnOrderEdited { get; set; }

    private ModalEditOrder? EditOrder { get; set; }
    public Guid Guid = Guid.NewGuid();
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    private string item = "";
    private string name = "";
    private Dictionary<string, int> details = new Dictionary<string, int>();

    public void Open(string? _item, string? _name, Dictionary<string, int> _details) {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        item = _item == null ? "" : _item;
        name = _name == null ? "" : _name;
        details = _details;

        StateHasChanged();
    }

    public async Task Close() {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }
}